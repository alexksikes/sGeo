source geonames
{
	type				= mysql
	sql_host			= localhost
	sql_user			= user
	sql_pass			= passwd
	sql_db				= geonames
	sql_port			= 3306
    
    sql_query			= \
    select \
        g.id, \
        g.name as place, \
        g.ascii_name as place_ascii, \
        g.alternate_names as place_alternate, \
        a2.name as county, \
        a2.name_ascii as county_ascii, \
        g.admin1_code as state_code, \
        a1.name as state, \
        g.country_code, \
        c.iso3, \
		c.fips, \
		c.country, \
        g.population, \
        g.latitude*PI()/180 as lat, \
        g.longitude*PI()/180 as lon, \
        f.feature_class, \
        f.feature_code \
    from geoname as g \
    left join admin1 as a1 on \
        g.country_code=a1.country_code and g.admin1_code=a1.admin1_code \
    left join admin2 as a2 on \
        g.country_code=a2.country_code and g.admin1_code=a2.admin1_code and g.admin2_code=a2.admin2_code \
    left join country_info as c on \
        g.country_code=c.iso \
    left join features as f on \
        g.feature_class=f.feature_class and g.feature_code=f.feature_code

    sql_attr_uint       = population
    sql_attr_float      = lat
    sql_attr_float      = lon

    sql_query_info		= select * from geoname where id=$id    
}

source geonames_P_US : geonames {
    sql_query			= \
    select \
        g.id, \
        g.name as place, \
        g.ascii_name as place_ascii, \
        g.alternate_names as place_alternate, \
        a2.name as county, \
        a2.name_ascii as county_ascii, \
        g.admin1_code as state_code, \
        a1.name as state, \
        g.country_code, \
        c.iso3, \
		c.fips, \
		c.country, \
        g.population, \
        f.feature_class, \
        f.feature_code \
    from geoname as g \
    left join admin1 as a1 on \
        g.country_code=a1.country_code and g.admin1_code=a1.admin1_code \
    left join admin2 as a2 on \
        g.country_code=a2.country_code and g.admin1_code=a2.admin1_code and g.admin2_code=a2.admin2_code \
    left join country_info as c on \
        g.country_code=c.iso \
    left join features as f on \
        g.feature_class=f.feature_class and g.feature_code=f.feature_code \
    where f.feature_class='P' and g.country_code='US'
}

source geonames_postals : geonames
{
    sql_query			= \
	select \
        id, \
		postal_code, \
		place_name, \
		admin2 as county, \
		admin1 as state_code, \
		admin1_name as state, \
		p.iso as country_code, \
		c.country \
    from postals as p \
    left join country_info as c on \
		p.iso=c.iso

	sql_query_info		= select * from postals where id=$id        
}

source zipcodes_US : geonames
{	
	sql_db				= zipcodesdotcom
	
    sql_query           = \
    select \
        id, \
        ZipCode as postal_code, \
        City as place, \
        CountyName as county, \
        State as state \
    from zipcodes
	sql_query_info		= select * from zipcodes where id=$id
}

index geonames
{
	docinfo             = extern
	min_word_len	    = 2
	charset_type	    = utf-8
    source			    = geonames
	path			    = data/sph_index/geonames/
}

index geonames_P_US : geonames
{
	source			    = geonames_P_US
	path			    = data/sph_index/geonames_P_US/
}

index geonames_postals : geonames
{
	source			    = geonames_postals
	path			    = data/sph_index/geonames_postals/
}

index zipcodes_US : geonames
{
	source			    = zipcodes_US
	path			    = data/sph_index/zipcodes_US/
}


indexer
{
	mem_limit			= 300M
}

searchd
{
	listen              = localhost:9312

    read_timeout		= 5
	max_children		= 30
    max_matches			= 1000
	seamless_rotate		= 1
    
	log					= data/sph_logs/searchd.log
	query_log			= data/sph_logs/query.log
	pid_file			= data/sph_logs/searchd.pid
}
